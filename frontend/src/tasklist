
 import React, { useState } from "react";
import { FaRegCircleCheck } from "react-icons/fa6"; // Import de l'icône
function TodoList() {
  const [tasks, setTasks] = useState([]);
  const [newTask, setNewTask] = useState("");
  const addTask = () => {
    const newTaskObj = {
      id: Date.now(),
      text: newTask,
      completed: false,
    };
    setTasks([...tasks, newTaskObj]);
    setNewTask("");
  };
  const removeTask = (taskId) => {
    const newTasks = tasks.filter((task) => task.id !== taskId);
    setTasks(newTasks);
  };
  const toggleTask = (taskId) => {
    const taskIndex = tasks.findIndex((task) => task.id === taskId);
    const task = tasks[taskIndex];
    const updatedTask = { ...task, completed: !task.completed };
    const updatedTasks = [...tasks];
    updatedTasks[taskIndex] = updatedTask;
    setTasks(updatedTasks);
  };
  return (
    <div className="max-w-md mx-auto font-Neue-Kabel flex flex-col items-center">
      <h1 className="bg-orange-default rounded-3xl text-cream text-xl p-1 m-5 text-center w-72">
        Courses de la semaine
      </h1>
      <form
        onSubmit={(e) => {
          e.preventDefault();
          addTask();
        }}
        className="mt-4 flex items-center"
      >
        <input
          type="text"
          placeholder="Ajouter un élément à la liste"
          value={newTask}
          onChange={(e) => setNewTask(e.target.value)}
          className="rounded-2xl border-2 border-orange-light shadow-sm p-2 m-5 w-96"
        />
      </form>
      <ul>
        {tasks.map((task) => (
          <li key={task.id} className="flex items-center justify-between">
            <div className="flex items-center">
              {/* Remplacement de l'input par FaRegCircleCheck */}
              <FaRegCircleCheck
                onClick={() => toggleTask(task.id)}
                className={`mr-2 cursor-pointer ${
                  task.completed ? "text-green-500" : "text-gray-500"
                }`}
              />
              <label
                htmlFor={`checkbox-${task.id}`}
                className={`${
                  task.completed ? "line-through text-gray-200" : ""
                }`}
              >
                {task.text}
              </label>
            </div>
            <button
              type="button"
              onClick={() => removeTask(task.id)}
              className="text-gray-500 hover:text-red-500"
            >
              Supprimer
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}
export default TodoList;